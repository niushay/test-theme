/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js":
/*!********************************************************************************!*\
  !*** ./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js ***!
  \********************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar KTAppEcommerceSaveProduct = function () {\n  // Private functions\n\n  // Init quill editor\n  var initQuill = function initQuill() {\n    // Define all elements for quill editor\n    var elements = ['#kt_ecommerce_add_product_description', '#kt_ecommerce_add_product_meta_description'];\n\n    // Loop all elements\n    elements.forEach(function (element) {\n      // Get quill element\n      var quill = document.querySelector(element);\n\n      // Break if element not found\n      if (!quill) {\n        return;\n      }\n\n      // Init quill --- more info: https://quilljs.com/docs/quickstart/\n      quill = new Quill(element, {\n        modules: {\n          toolbar: [[{\n            header: [1, 2, false]\n          }], ['bold', 'italic', 'underline'], ['image', 'code-block']]\n        },\n        placeholder: 'Type your text here...',\n        theme: 'snow' // or 'bubble'\n      });\n    });\n  };\n\n  // Init tagify\n  var initTagify = function initTagify() {\n    // Define all elements for tagify\n    var elements = ['#kt_ecommerce_add_product_category', '#kt_ecommerce_add_product_tags'];\n\n    // Loop all elements\n    elements.forEach(function (element) {\n      // Get tagify element\n      var tagify = document.querySelector(element);\n\n      // Break if element not found\n      if (!tagify) {\n        return;\n      }\n\n      // Init tagify --- more info: https://yaireo.github.io/tagify/\n      new Tagify(tagify, {\n        whitelist: [\"new\", \"trending\", \"sale\", \"discounted\", \"selling fast\", \"last 10\"],\n        dropdown: {\n          maxItems: 20,\n          // <- mixumum allowed rendered suggestions\n          classname: \"tagify__inline__suggestions\",\n          // <- custom classname for this dropdown, so it could be targeted\n          enabled: 0,\n          // <- show suggestions on focus\n          closeOnSelect: false // <- do not hide the suggestions dropdown once an item has been selected\n        }\n      });\n    });\n  };\n\n  // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\n  var initFormRepeater = function initFormRepeater() {\n    $('#kt_ecommerce_add_product_options').repeater({\n      initEmpty: false,\n      defaultValues: {\n        'text-input': 'foo'\n      },\n      show: function show() {\n        $(this).slideDown();\n\n        // Init select2 on new repeated items\n        initConditionsSelect2();\n      },\n      hide: function hide(deleteElement) {\n        $(this).slideUp(deleteElement);\n      }\n    });\n  };\n\n  // Init condition select2\n  var initConditionsSelect2 = function initConditionsSelect2() {\n    // Tnit new repeating condition types\n    var allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-product=\"product_option\"]');\n    allConditionTypes.forEach(function (type) {\n      if ($(type).hasClass(\"select2-hidden-accessible\")) {\n        return;\n      } else {\n        $(type).select2({\n          minimumResultsForSearch: -1\n        });\n      }\n    });\n  };\n\n  // Init noUIslider\n  var initSlider = function initSlider() {\n    var slider = document.querySelector(\"#kt_ecommerce_add_product_discount_slider\");\n    var value = document.querySelector(\"#kt_ecommerce_add_product_discount_label\");\n    noUiSlider.create(slider, {\n      start: [10],\n      connect: true,\n      range: {\n        \"min\": 1,\n        \"max\": 100\n      }\n    });\n    slider.noUiSlider.on(\"update\", function (values, handle) {\n      value.innerHTML = Math.round(values[handle]);\n      if (handle) {\n        value.innerHTML = Math.round(values[handle]);\n      }\n    });\n  };\n\n  // Init DropzoneJS --- more info:\n  var initDropzone = function initDropzone() {\n    var myDropzone = new Dropzone(\"#kt_ecommerce_add_product_media\", {\n      url: \"https://keenthemes.com/scripts/void.php\",\n      // Set the url for your upload script location\n      paramName: \"file\",\n      // The name that will be used to transfer the file\n      maxFiles: 10,\n      maxFilesize: 10,\n      // MB\n      addRemoveLinks: true,\n      accept: function accept(file, done) {\n        if (file.name == \"wow.jpg\") {\n          done(\"Naha, you don't.\");\n        } else {\n          done();\n        }\n      }\n    });\n  };\n\n  // Handle discount options\n  var handleDiscount = function handleDiscount() {\n    var discountOptions = document.querySelectorAll('input[name=\"discount_option\"]');\n    var percentageEl = document.getElementById('kt_ecommerce_add_product_discount_percentage');\n    var fixedEl = document.getElementById('kt_ecommerce_add_product_discount_fixed');\n    discountOptions.forEach(function (option) {\n      option.addEventListener('change', function (e) {\n        var value = e.target.value;\n        switch (value) {\n          case '2':\n            {\n              percentageEl.classList.remove('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n          case '3':\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.remove('d-none');\n              break;\n            }\n          default:\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n        }\n      });\n    });\n  };\n\n  // Shipping option handler\n  var handleShipping = function handleShipping() {\n    var shippingOption = document.getElementById('kt_ecommerce_add_product_shipping_checkbox');\n    var shippingForm = document.getElementById('kt_ecommerce_add_product_shipping');\n    shippingOption.addEventListener('change', function (e) {\n      var value = e.target.checked;\n      if (value) {\n        shippingForm.classList.remove('d-none');\n      } else {\n        shippingForm.classList.add('d-none');\n      }\n    });\n  };\n\n  // Category status handler\n  var handleStatus = function handleStatus() {\n    var target = document.getElementById('kt_ecommerce_add_product_status');\n    var select = document.getElementById('kt_ecommerce_add_product_status_select');\n    var statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\n    $(select).on('change', function (e) {\n      var value = e.target.value;\n      switch (value) {\n        case \"published\":\n          {\n            var _target$classList;\n            (_target$classList = target.classList).remove.apply(_target$classList, statusClasses);\n            target.classList.add('bg-success');\n            hideDatepicker();\n            break;\n          }\n        case \"scheduled\":\n          {\n            var _target$classList2;\n            (_target$classList2 = target.classList).remove.apply(_target$classList2, statusClasses);\n            target.classList.add('bg-warning');\n            showDatepicker();\n            break;\n          }\n        case \"inactive\":\n          {\n            var _target$classList3;\n            (_target$classList3 = target.classList).remove.apply(_target$classList3, statusClasses);\n            target.classList.add('bg-danger');\n            hideDatepicker();\n            break;\n          }\n        case \"draft\":\n          {\n            var _target$classList4;\n            (_target$classList4 = target.classList).remove.apply(_target$classList4, statusClasses);\n            target.classList.add('bg-primary');\n            hideDatepicker();\n            break;\n          }\n        default:\n          break;\n      }\n    });\n\n    // Handle datepicker\n    var datepicker = document.getElementById('kt_ecommerce_add_product_status_datepicker');\n\n    // Init flatpickr --- more info: https://flatpickr.js.org/\n    $('#kt_ecommerce_add_product_status_datepicker').flatpickr({\n      enableTime: true,\n      dateFormat: \"Y-m-d H:i\"\n    });\n    var showDatepicker = function showDatepicker() {\n      datepicker.parentNode.classList.remove('d-none');\n    };\n    var hideDatepicker = function hideDatepicker() {\n      datepicker.parentNode.classList.add('d-none');\n    };\n  };\n\n  // Condition type handler\n  var handleConditions = function handleConditions() {\n    var allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\n    var conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\n    allConditions.forEach(function (radio) {\n      radio.addEventListener('change', function (e) {\n        if (e.target.value === '1') {\n          conditionMatch.classList.remove('d-none');\n        } else {\n          conditionMatch.classList.add('d-none');\n        }\n      });\n    });\n  };\n\n  // Submit form handler\n  var handleSubmit = function handleSubmit() {\n    var _fields;\n    // Define variables\n    var validator;\n\n    // Get elements\n    var form = document.getElementById('kt_ecommerce_add_product_form');\n    var submitButton = document.getElementById('kt_ecommerce_add_product_submit');\n\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    validator = FormValidation.formValidation(form, {\n      fields: (_fields = {\n        'product_name': {\n          validators: {\n            notEmpty: {\n              message: 'Product name is required'\n            }\n          }\n        },\n        'sku': {\n          validators: {\n            notEmpty: {\n              message: 'SKU is required'\n            }\n          }\n        }\n      }, _defineProperty(_fields, \"sku\", {\n        validators: {\n          notEmpty: {\n            message: 'Product barcode is required'\n          }\n        }\n      }), _defineProperty(_fields, 'shelf', {\n        validators: {\n          notEmpty: {\n            message: 'Shelf quantity is required'\n          }\n        }\n      }), _defineProperty(_fields, 'price', {\n        validators: {\n          notEmpty: {\n            message: 'Product base price is required'\n          }\n        }\n      }), _defineProperty(_fields, 'tax', {\n        validators: {\n          notEmpty: {\n            message: 'Product tax class is required'\n          }\n        }\n      }), _fields),\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    });\n\n    // Handle submit button\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault();\n\n      // Validate form before submit\n      if (validator) {\n        validator.validate().then(function (status) {\n          console.log('validated!');\n          if (status == 'Valid') {\n            submitButton.setAttribute('data-kt-indicator', 'on');\n\n            // Disable submit button whilst loading\n            submitButton.disabled = true;\n            setTimeout(function () {\n              submitButton.removeAttribute('data-kt-indicator');\n              Swal.fire({\n                text: \"Form has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  // Enable submit button after loading\n                  submitButton.disabled = false;\n\n                  // Redirect to customers list page\n                  window.location = form.getAttribute(\"data-kt-redirect\");\n                }\n              });\n            }, 2000);\n          } else {\n            Swal.fire({\n              html: \"Sorry, looks like there are some errors detected, please try again. <br/><br/>Please note that there may be errors in the <strong>General</strong> or <strong>Advanced</strong> tabs\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      // Init forms\n      initQuill();\n      initTagify();\n      initSlider();\n      initFormRepeater();\n      initDropzone();\n      initConditionsSelect2();\n\n      // Handle forms\n      handleStatus();\n      handleConditions();\n      handleDiscount();\n      handleShipping();\n      handleSubmit();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceSaveProduct.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/js/custom/apps/ecommerce/catalog/save-product.js"]();
/******/ 	
/******/ })()
;